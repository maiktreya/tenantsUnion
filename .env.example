# This script sets the needed enviroment variables for the project
# To get the app working on DEVELOPMENT MODE ->
# 1) rename this file to .env ("mv env.example .env")
# 2) run: docker compose --profile Frontend -f docker-compose.yaml -f docker-compose-dev.yaml up -d --build --renew-anon-volumes
# 3) access Frontend on http://localhost:8081 or any other service on their corresponding ports

# =====================================================================
# DATA INITIALIZATION SETTINGS
# =====================================================================
# Use this variable to switch between production and development data.
# For production data (from CSV files): INIT_SCRIPTS_PATH=./build/postgreSQL/init-scripts
# For development data (artificial, from a single SQL file): INIT_SCRIPTS_PATH=./build/postgreSQL/init-scripts-dev
INIT_SCRIPTS_PATH=./build/postgreSQL/init-scripts-dev

# =====================================================================
# DATABASE CONFIGURATION
# =====================================================================
POSTGRES_USER=app_user
POSTGRES_PASSWORD=set_securely_this_password
POSTGRES_DB=mydb
POSTGRES_DB_SCHEMA=sindicato_inq
POSTGRES_API_URL=http://server:3000

# =====================================================================
# DUCKDNS HOSTNAME CONFIGURATION
# =====================================================================
HOSTNAME=pending
DUCKDNS_TOKEN=pending

# =====================================================================
# SSL CERTIFICATE CONFIGURATION
# =====================================================================
# SSL Configuration
EMAIL=test@mail.com

# =====================================================================
# NICEGUI
# =====================================================================
NICEGUI_STORAGE_SECRET=set_securely
# Set DEV_MODE to TRUE to get debug level logs on niceGUI console
DEV_MODE=True